volumes:
  postgres-data:
    driver: local
  kestra-data:
    driver: local

secrets:
  google_credentials:
    file: ../essencial_data/fair-canto-447119-p5-9091e1a7224d.json

services:
  terraform:
    image: hashicorp/terraform:latest
    working_dir: /workspace
    volumes:
      - .:/workspace
      - /workspaces/zoomcamp2025/essencial_data:/workspace/essencial_data
      - ~/.config/gcloud:/root/.config/gcloud
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/workspace/essencial_data/terraform-key.json
    stdin_open: true
    tty: true
    entrypoint: ["/bin/sh", "-c"]
    depends_on:
      - kestra
    command:
      - |
        terraform init &&
        terraform apply -auto-approve

  postgres:
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: k3str4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10

  kestra:
    image: kestra/kestra:latest
    pull_policy: always
    user: "root"
    env_file:
      - .env
    # secrets:
    #   - google_credentials
    command: server standalone
    volumes:
      # - ../essencial_data/fair-canto-447119-p5-9091e1a7224d.json:/app/google_credentials.json
      - kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
    environment:
      # PATH: "/app:${PATH}"
      # SECRET_MYSECRET: bcbcbcvbcvb
      # GOOGLE_APPLICATION_CREDENTIALS: /run/secrets/google_credentials
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://postgres:5432/kestra
            driverClassName: org.postgresql.Driver
            username: kestra
            password: k3str4
        kestra:
          server:
            basicAuth:
              enabled: false
              username: "admin@kestra.io" # it must be a valid email address
              password: kestra
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
            scripts:
              docker:
                volume-enabled: true
          url: http://localhost:8080/
    # entrypoint: ["sh", "-c"]
    # command: >
    #   "curl -X POST "http://localhost:8080/api/v1/secrets/final_project" -H "Content-Type: application/json" -d '{"key": "GCP_CREDS_CONTENT", "value": "'"$(cat /app/google_credentials.json | jq -c .)"'" }' && kestra server standalone"
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_started
